x = read.csv("PHC.csv",header = F)
head(x)
data$V3 = gsub("\n"," ",data$V3)
data$V2 = gsub("\n"," ",data$V2)
rm = c("RH","URBAN","Urban","urban","ANM","APHC","-1","-2","(MCH)","AVD","CCE","CCH","CCP","CVS","CHC","DH","DVS","eVIN","PHC","RVS","SVS","SDH","SE","SS","SVS","UHC","UNDP","UPHC","HSC","Rural","rural")
rm = c("RH","URBAN","Urban","urban","ANM","APHC","-1","-2","(MCH)","AVD","CCE","CCH","CCP","CVS","CHC","DH","DVS","eVIN","PHC","RVS","SVS","SDH","SE","SS","SVS","UHC","UNDP","UPHC","HSC","Rural","rural")
data = x
data$V3 = gsub("\n"," ",data$V3)
data$V2 = gsub("\n"," ",data$V2)
head(data)
for (i in 1:(length(rm))){
data$V3 = gsub(rm[i],"",data$V3)
}
head(data)
clear
x = read.csv("PHC.csv",header = F)
data =x
data$V3 = gsub("\n"," ",data$V3)
data$V2 = gsub("\n"," ",data$V2)
rm = c("RH","URBAN","Urban","urban","ANM","APHC","-1","-2","(MCH)","AVD","SDH","CCE","CCH","CCP","CVS","CHC","DH","DVS","eVIN","PHC","RVS","SVS","SDH","SE","SS","SVS","UHC","UNDP","UPHC","HSC","Rural","rural")
for (i in 1:(length(rm))){
data$V3 = gsub(rm[i],"",data$V3)
}
data
data[334:606,]
rm = c("RH","URBAN","Urban","urban","ANM","APHC","-1","-2","\(MCH\)","AVD","SDH","CCE","CCH","CCP","CVS","CHC","DH","DVS","eVIN","PHC","RVS","SVS","SDH","SE","SS","SVS","UHC","UNDP","UPHC","HSC","Rural","rural")
data = read.csv("PHC.csv",header = F)
data$V3 = gsub("\n"," ",data$V3)
data$V2 = gsub("\n"," ",data$V2)
rm = c("RH","URBAN","Urban","urban","ANM","APHC","-1","-2","AVD","SDH","CCE","CCH","CCP","CVS","CHC","DH","DVS","eVIN","PHC","RVS","SVS","SDH","SE","SS","SVS","UHC","UNDP","UPHC","HSC","Rural","rural")
for (i in 1:(length(rm))){
data$V3 = gsub(rm[i],"",data$V3)
}
data
data[333:606,]
state = "Bihar"
data$V4 = paste(data$V3,data$V2,sep = ", ")
data$V4 = paste(data$V4,state,"India",sep = ", ")
data$V4
write.csv(data,"PHC_Corrected.csv")
data = read.csv("rvs.csv") ###
data
data = data[,]
data
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
origin = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
origin = paste(origin,data[i,8],sep=";")
}
}
index_names_origin = data$name
data = read.csv("dvs.csv")   ####
data = data[,]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
dest = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
dest = paste(dest,data[i,8],sep=";")
}
}
index_names_dest = data$name
f
origin
dest
f = "https://dev.virtualearth.net/REST/v1/Routes/DistanceMatrix?origins="
s = "&destinations="
t = "&travelMode=driving&key=AjPUy6L3ZouH31A3BNigLLscOSzXqecAAKedFQDMjFG3paD0-n5TkuCNBRiVqCiU"
library(data.table)
library(httr)
library(jsonlite)
index_names_dest
index_names_origin
url = paste(f,origin,s,dest,t,sep = "")
js = GET(url)
js = content(js)
json1 = jsonlite::fromJSON(toJSON(js))
data = json1$resourceSets$resources[[1]]$results
data = as.data.table(data)
data$destinationIndex = as.numeric(data$destinationIndex)
data$originIndex = as.numeric(data$originIndex)
data$travelDistance = as.numeric(data$travelDistance)
data = data[,c(1,2,4)]
data = dcast(data,originIndex~destinationIndex,value.var = "travelDistance")
colnames(data) = c("RVS/DVS",index_names_dest) ###
data$`RVS/DVS` = index_names_origin    ###
data
final = data
write.csv(final,file = ".\\RVS-DVS.csv",row.names = F)
data = read.csv("svs.csv") ###
data = data[,]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
origin = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
origin = paste(origin,data[i,8],sep=";")
}
}
index_names_origin = data$name
data = read.csv("rvs.csv")   ####
data = data[,]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
dest = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
dest = paste(dest,data[i,8],sep=";")
}
}
index_names_dest = data$name
url = paste(f,origin,s,dest,t,sep = "")
js = GET(url)
js = content(js)
json1 = jsonlite::fromJSON(toJSON(js))
data = json1$resourceSets$resources[[1]]$results
data = as.data.table(data)
data$destinationIndex = as.numeric(data$destinationIndex)
data$originIndex = as.numeric(data$originIndex)
data$travelDistance = as.numeric(data$travelDistance)
data = data[,c(1,2,4)]
data = dcast(data,originIndex~destinationIndex,value.var = "travelDistance")
colnames(data) = c("SVS/RVS",index_names_dest) ###
data$`SVS/RVS` = index_names_origin    ###
final = data
write.csv(final,file = ".\\SVS-RVS.csv",row.names = F)
data = read.csv("dvs.csv") ###
data = data[,]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
origin = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
origin = paste(origin,data[i,8],sep=";")
}
}
index_names_origin = data$name
data = read.csv("phc_.csv")   ####
data = data[1:40,]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
dest = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
dest = paste(dest,data[i,8],sep=";")
}
}
index_names_dest = data$name
index_names_dest
url = paste(f,origin,s,dest,t,sep = "")
js = GET(url)
js = content(js)
json1 = jsonlite::fromJSON(toJSON(js))
data = json1$resourceSets$resources[[1]]$results
data = as.data.table(data)
data$destinationIndex = as.numeric(data$destinationIndex)
data$originIndex = as.numeric(data$originIndex)
data$travelDistance = as.numeric(data$travelDistance)
data = data[,c(1,2,4)]
data = dcast(data,originIndex~destinationIndex,value.var = "travelDistance")
colnames(data) = c("DVS/PHC",index_names_dest) ###
data$`DVS/PHC` = index_names_origin    ###
final = data
write.csv(final,file = ".\\DVS-PHC.csv",row.names = F)
data = read.csv("phc_.csv")   ####
print("heelo")
x = 1
print("heelo",x)
print("heelo")
print(x)
origin
for (i in 1:14)
{
print(40*i+1)
data = read.csv("phc_.csv")   ####
data = data[40*i+1:40*(i+1),]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
dest = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
dest = paste(dest,data[i,8],sep=";")
}
}
index_names_dest = data$name
url = paste(f,origin,s,dest,t,sep = "")
js = GET(url)
js = content(js)
json1 = jsonlite::fromJSON(toJSON(js))
data = json1$resourceSets$resources[[1]]$results
data = as.data.table(data)
data$destinationIndex = as.numeric(data$destinationIndex)
data$originIndex = as.numeric(data$originIndex)
data$travelDistance = as.numeric(data$travelDistance)
data = data[,c(1,2,4)]
data = dcast(data,originIndex~destinationIndex,value.var = "travelDistance")
colnames(data) = c("DVS/PHC",index_names_dest) ###
data$`DVS/PHC` = index_names_origin    ###
#write.csv(data,file = ".\\DVS-Clinics.csv",row.names = F)   ###
final = read.csv("DVS-PHC.csv")
final = cbind(final,data[,-1])
write.csv(final,file = ".\\DVS-PHC.csv",row.names = F)
}
i
i = 8
data = read.csv("phc_.csv")   ####
print(40*i+1)
data = data[40*i+1:40*(i+1),]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
dest = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
dest = paste(dest,data[i,8],sep=";")
}
}
index_names_dest = data$name
url = paste(f,origin,s,dest,t,sep = "")
js = GET(url)
js = content(js)
json1 = jsonlite::fromJSON(toJSON(js))
data = json1$resourceSets$resources[[1]]$results
data = as.data.table(data)
data$destinationIndex = as.numeric(data$destinationIndex)
data$originIndex = as.numeric(data$originIndex)
data$travelDistance = as.numeric(data$travelDistance)
data = data[,c(1,2,4)]
head(data)
js
dest
print(40*i+1)
i
i = 8
print(40*i+1)
data = read.csv("phc_.csv")   ####
i
data = data[40*i+1:40*(i+1),]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
data$cor
i
data = read.csv("phc_.csv")   ####
data = data[40*i+1:40*(i+1),]
data
data = read.csv("phc_.csv")   ####
i
data[320:400]
data[320:400,]
data = data[(40*i+1):(40*(i+1)),]
data
for (i in 8:14)
{
print(40*i+1)
data = read.csv("phc_.csv")   ####
data = data[(40*i+1):(40*(i+1)),]
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
dest = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
dest = paste(dest,data[i,8],sep=";")
}
}
index_names_dest = data$name
url = paste(f,origin,s,dest,t,sep = "")
js = GET(url)
js = content(js)
json1 = jsonlite::fromJSON(toJSON(js))
data = json1$resourceSets$resources[[1]]$results
data = as.data.table(data)
data$destinationIndex = as.numeric(data$destinationIndex)
data$originIndex = as.numeric(data$originIndex)
data$travelDistance = as.numeric(data$travelDistance)
data = data[,c(1,2,4)]
data = dcast(data,originIndex~destinationIndex,value.var = "travelDistance")
colnames(data) = c("DVS/PHC",index_names_dest) ###
data$`DVS/PHC` = index_names_origin    ###
#write.csv(data,file = ".\\DVS-Clinics.csv",row.names = F)   ###
final = read.csv("DVS-PHC.csv")
final = cbind(final,data[,-1])
write.csv(final,file = ".\\DVS-PHC.csv",row.names = F)
}
data = read.csv("phc_.csv")   ####
data = data[601:nrow(data),]
data
data$latitude = as.character(data$latitude)
data$longitude = as.character(data$longitude)
data$cor = paste(data$latitude,data$longitude,sep = ",")
dest = data$cor[1]
if(nrow(data)>1){
for(i in 2:nrow(data)){
dest = paste(dest,data[i,8],sep=";")
}
}
index_names_dest = data$name
url = paste(f,origin,s,dest,t,sep = "")
js = GET(url)
js = content(js)
json1 = jsonlite::fromJSON(toJSON(js))
data = json1$resourceSets$resources[[1]]$results
data = as.data.table(data)
data$destinationIndex = as.numeric(data$destinationIndex)
data$originIndex = as.numeric(data$originIndex)
data$travelDistance = as.numeric(data$travelDistance)
data = data[,c(1,2,4)]
data = dcast(data,originIndex~destinationIndex,value.var = "travelDistance")
colnames(data) = c("DVS/PHC",index_names_dest) ###
data$`DVS/PHC` = index_names_origin    ###
#write.csv(data,file = ".\\DVS-Clinics.csv",row.names = F)   ###
final = read.csv("DVS-PHC.csv")
final = cbind(final,data[,-1])
write.csv(final,file = ".\\DVS-PHC.csv",row.names = F)
